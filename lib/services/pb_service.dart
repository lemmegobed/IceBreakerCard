import 'package:pocketbase/pocketbase.dart';

class PbService {
  final PocketBase pb = PocketBase('http://127.0.0.1:8090'); 

  Future<void> init() async {
    try {
      await pb.admins.authWithPassword('admin@gmail.com', 'en12345678');
    } catch (e) {
    }
  }

  Future<void> addQuestion(String category, String question) async {
    try {
      await pb.collection('questions').create(body: {
        'category': category,
        'text': question,
        'favorite': false,
      });
      print('‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÉ‡∏´‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
    } catch (e) {
      print('‚ùå ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: $e');
      rethrow;
    }
  }

  Future<List<RecordModel>> getQuestionsByCategory(String category) async {
    try {
      final result = await pb.collection('questions').getFullList(
        batch: 50,
        filter: 'category="$category"',
        sort: '-created',
      );
      return result;
    } catch (e) {
      print('‚ùå ‡∏î‡∏∂‡∏á‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: $e');
      rethrow;
    }
  }

  Future<List<RecordModel>> getQuestions(String category) async {
    try {
      final result = await pb.collection('questions').getFullList(
        batch: 50,
        filter: category == '‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î' ? null : 'category="$category"',
        sort: '-created',
      );
      return result;
    } catch (e) {
      print('‚ùå ‡∏î‡∏∂‡∏á‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: $e');
      rethrow;
    }
  }

  // ‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°
  Future<void> updateQuestion(String id, String newText) async {
    try {
      await pb.collection('questions').update(id, body: {
        'text': newText,
      });
      print('‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
    } catch (e) {
      print('‚ùå ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: $e');
      rethrow;
    }
  }

  // ‚úÖ ‡∏•‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°
  Future<void> deleteQuestion(String id) async {
    try {
      await pb.collection('questions').delete(id);
      print('üóëÔ∏è ‡∏•‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
    } catch (e) {
      print('‚ùå ‡∏•‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: $e');
      rethrow;
    }
  }
}
